name: Deploy Django to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Sync project to EC2 (only contents of repo)
        run: |
          ssh -i ec2_key.pem -p ${{ secrets.EC2_SSH_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ${{ secrets.EC2_PROJECT_DIR }}"

          rsync -avz -e "ssh -i ec2_key.pem -p ${{ secrets.EC2_SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_PROJECT_DIR }}/

      - name: SSH into EC2 and deploy
        run: |
          ssh -i ec2_key.pem -p ${{ secrets.EC2_SSH_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            cd ${{ secrets.EC2_PROJECT_DIR }}

            echo "Creating new virtual environment if not exists..."
            if [ ! -d "venv" ]; then
              python3.12 -m venv venv
            fi

            echo "Activating virtual environment..."
            source venv/bin/activate

            echo "Upgrading pip, setuptools, and wheel..."
            pip install --upgrade pip setuptools wheel

            echo "Installing dependencies..."
            pip install -r requirements.txt

            echo "Running migrations..."
            python manage.py migrate

            echo "Collecting static files..."
            python manage.py collectstatic --noinput

            echo "Restarting Gunicorn/Django service..."
            sudo systemctl daemon-reload
            sudo systemctl restart foodsite

            echo "âœ… Deployment completed successfully!"
          EOF
