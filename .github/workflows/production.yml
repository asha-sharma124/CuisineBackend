name: Deploy Django to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Sync project to EC2
        run: |
          rsync -avz -e "ssh -i ec2_key.pem -p ${{ secrets.EC2_SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_PROJECT_DIR }}

      - name: SSH into EC2 and deploy
        run: |
          ssh -i ec2_key.pem -p ${{ secrets.EC2_SSH_PORT }} -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "Installing Python 3.12 and pip..."
            sudo add-apt-repository -y ppa:deadsnakes/ppa
            sudo apt update
            sudo apt install -y python3.12 python3.12-venv python3.12-dev python3-pip libpq-dev build-essential

            cd ${{ secrets.EC2_PROJECT_DIR }}

            echo "Removing old virtual environment if exists..."
            rm -rf venv
            
            echo "Creating new virtual environment with Python 3.12..."
            python3.12 -m venv venv

            echo "Activating virtual environment..."
            source venv/bin/activate
            pip install "psycopg[binary]"
            echo "Upgrading pip, setuptools, and wheel..."
            pip install --upgrade pip setuptools wheel

            echo "Installing project dependencies from requirements.txt..."
            pip install -r requirements.txt

            echo "Verifying psycopg2 installation..."
            python -c "import psycopg2" || { echo 'ERROR: psycopg2 module not found'; exit 1; }

            echo "Applying database migrations..."
            python manage.py migrate

            echo "Collecting static files..."
            python manage.py collectstatic --noinput

            echo "Restarting Django service..."
            sudo systemctl daemon-reload
            sudo systemctl restart foodsite

            echo "âœ… Deployment completed successfully!"
          EOF
